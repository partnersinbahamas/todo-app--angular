"use strict";(self.webpackChunktodo_app_angular=self.webpackChunktodo_app_angular||[]).push([[471],{6471:(c,o,e)=>{e.r(o),e.d(o,{AboutModule:()=>p});var s=e(6814),t=e(6689);let l=(()=>{class a{static#t=this.\u0275fac=function(n){return new(n||a)};static#a=this.\u0275cmp=t.Xpm({type:a,selectors:[["app-about-page"]],decls:53,vars:0,consts:[[1,"about"],[1,"about__txt"],[1,"about__list"],[1,"about__item","about__txt"],[1,"about__txt_strong"]],template:function(n,r){1&n&&(t.TgZ(0,"section",0)(1,"article",1),t._uU(2," TodoApp is a task management application developed using Angular, TypeScript, JavaScript, HTML, CSS, Sass, and following the BEM methodology. The application utilizes various Angular features and concepts: "),t.qZA(),t.TgZ(3,"ul",2)(4,"li",3)(5,"span",4),t._uU(6,"NgModel"),t.qZA(),t._uU(7," and "),t.TgZ(8,"span",4),t._uU(9,"ReactiveForms"),t.qZA(),t._uU(10," Used for managing data and forms within the application. "),t.qZA(),t.TgZ(11,"li",3)(12,"span",4),t._uU(13,"Input"),t.qZA(),t._uU(14,", "),t.TgZ(15,"span",4),t._uU(16,"Output"),t.qZA(),t._uU(17," and "),t.TgZ(18,"span",4),t._uU(19,"EventEmitter"),t.qZA(),t._uU(20,": Enabling data exchange between parent and child components. "),t.qZA(),t.TgZ(21,"li",3)(22,"span",4),t._uU(23,"ViewChild"),t.qZA(),t._uU(24,": Providing access to DOM elements from within components. "),t.qZA(),t.TgZ(25,"li",3)(26,"span",4),t._uU(27,"Life Cycle Methods"),t.qZA(),t._uU(28,": Used for managing the lifecycle of components, such as ngOnInit, ngOnDestroy, and others. "),t.qZA(),t.TgZ(29,"li",3)(30,"span",4),t._uU(31,"Change Detection Strategy"),t.qZA(),t._uU(32,": Employed for optimizing performance by controlling change detection. "),t.qZA(),t.TgZ(33,"li",3)(34,"span",4),t._uU(35,"Pipes"),t.qZA(),t._uU(36,": Used for data transformation in templates, such as date formatting. "),t.qZA(),t.TgZ(37,"li",3)(38,"span",4),t._uU(39,"Services"),t.qZA(),t._uU(40,": Organized to handle business logic and data exchange between components. "),t.qZA(),t.TgZ(41,"li",3),t._uU(42," Observables and Subjects: Leveraged for asynchronous programming and managing data streams. "),t.qZA(),t.TgZ(43,"li",3)(44,"span",4),t._uU(45,"Router"),t.qZA(),t._uU(46,": Facilitating navigation between different parts of the application and supporting routing. "),t.qZA(),t.TgZ(47,"li",3)(48,"span",4),t._uU(49,"Lazy Loading"),t.qZA(),t._uU(50,": Implemented to optimize application loading by dynamically loading parts of the application as needed. "),t.qZA()(),t.TgZ(51,"article",1),t._uU(52," This application allows users to create, update, delete, and mark tasks as completed, as well as view them in various modes (active, completed) and filter them by status. "),t.qZA()())},styles:[".about[_ngcontent-%COMP%]{display:flex;flex-direction:column;gap:20px}.about__txt[_ngcontent-%COMP%]{font-size:16px}.about__txt_strong[_ngcontent-%COMP%]{font-weight:400}.about__list[_ngcontent-%COMP%]{list-style:circle;display:flex;flex-direction:column;gap:5px}"]})}return a})();var u=e(8234);let p=(()=>{class a{static#t=this.\u0275fac=function(n){return new(n||a)};static#a=this.\u0275mod=t.oAB({type:a});static#e=this.\u0275inj=t.cJS({imports:[s.ez,u.Bz.forChild([{path:"",component:l}])]})}return a})()}}]);